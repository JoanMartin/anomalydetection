version: '3'

services:
  poc_zookeeper:
    image: wurstmeister/zookeeper
    container_name: poc_zookeeper
    ports:
      - "2181:2181"
    networks:
      - poc_anomaly_detection
  poc_kafka:
    image: "wurstmeister/kafka:0.11.0.1"
    container_name: poc_kafka
    hostname: poc_kafka
    links:
      - poc_zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: poc_zookeeper:2181
      KAFKA_CREATE_TOPICS: "write_feed:1:1,write_predict:1:1,read_feed:1:1,read_predict:1:1"
      KAFKA_ADVVERTISED_PORT: 9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - poc_anomaly_detection
    depends_on:
      - poc_zookeeper

  kafka_wait_for:
    image: wurstmeister/kafka
    container_name: kafka_wait_for
    working_dir: /var/tmp
    volumes:
      - ./bin/:/var/tmp
    command: /bin/bash wait-for-kafka.sh
    environment:
      ZOOKEEPER_HOST: poc_zookeeper:2181
      KAFKA_PATH: /opt/kafka
    networks:
      - poc_anomaly_detection
    depends_on:
      - poc_kafka
  feed:
    build:
      context: feed
      dockerfile: Dockerfile
    container_name: poc_anomaly_detection_feed
    links:
      - poc_kafka
    networks:
      - poc_anomaly_detection
    environment:
      BOOTSTRAP_SERVER: ${HOST_IP}:9092
      BROKER_SERVER: ${HOST_IP}:9092
      WRITE_FEED_TOPIC: "write_feed"
      READ_FEED_TOPIC: "read_feed"
      PERIOD_IN_SECONDS: 300
    depends_on:
      - kafka_wait_for
  writes_app:
    build:
      context: anomalydetection
      dockerfile: Dockerfile
    container_name: poc_anomaly_detection_writes
    links:
      - poc_kafka
    networks:
      - poc_anomaly_detection
    environment:
      BOOTSTRAP_SERVER: ${HOST_IP}:9092
      BROKER_SERVER: ${HOST_IP}:9092
      INPUT_TOPIC: "write_feed"
      OUTPUT_TOPIC: "write_predict"
      PERIOD_IN_SECONDS: 300
    depends_on:
      - feed

  read_app:
    build:
      context: anomalydetection
      dockerfile: Dockerfile
    container_name: poc_anomaly_detection_read
    links:
      - poc_kafka
    networks:
      - poc_anomaly_detection
    environment:
      BOOTSTRAP_SERVER: ${HOST_IP}:9092
      BROKER_SERVER: ${HOST_IP}:9092
      INPUT_TOPIC: "read_feed"
      OUTPUT_TOPIC: "read_predict"
      PERIOD_IN_SECONDS: 30
    depends_on:
      - feed

networks:
  poc_anomaly_detection:
    driver: bridge

